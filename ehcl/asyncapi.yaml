asyncapi: 3.0.0
info:
  title: eHealth-CardLink Card Communication Interface
  version: 1.0.0
  description: >
    This API defines an interface between a client (i.e. application which has
    access to a smartcard of type eHC (electronic Health Card = eGK
    = elektronische Gesundheitskarte) on one side and a server (i.e. application
    of type eHealth-CardLink) on the other side.
  contact:
    name: Team Smartcard at gematik GmbH
    url: https://www.gematik.de
    email: smartcards@gematik.de
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'

servers:
  production:
    host: to.be.configured
    protocol: wss
    description: Websocket Server

channels:
  cardExchange:
    address: /
    messages:
      sessionStatusMessage:
        $ref: '#/components/messages/sessionStatusMessage'
      requestSMSCodeMessage:
        $ref: '#/components/messages/requestSMSCodeMessage'
      requestSMSCodeResponseMessage:
        $ref: '#/components/messages/requestSMSCodeResponseMessage'
      confirmSMSCodeMessage:
        $ref: '#/components/messages/confirmSMSCodeMessage'
      confirmSMSCodeResponseMessage:
        $ref: '#/components/messages/confirmSMSCodeResponseMessage'
      ICCSNReassignmentMessage:
        $ref: '#/components/messages/ICCSNReassignmentMessage'
      registerEgkMessage:
        $ref: '#/components/messages/registerEgkMessage'
      registerEgkFinishMessage:
        $ref: '#/components/messages/registerEgkFinishMessage'
      sendApduMessage:
        $ref: '#/components/messages/sendApduMessage'
      sendApduResponseMessage:
        $ref: '#/components/messages/sendApduResponseMessage'
      tasklistErrorMessage:
        $ref: '#/components/messages/tasklistErrorMessage'
      readyMessage:
        $ref: '#/components/messages/readyMessage'
      invalidPayloadErrorMessage:
        $ref: '#/components/messages/invalidPayloadErrorMessage'
      genericErrorMessage:
        $ref: '#/components/messages/genericErrorMessage'
    bindings:
      ws:
        query:
          type: object
          properties:
            token:
              type: string
              description: webSocketId
            version:
              type: string
              description: Version of the API required by the client

operations:
  sendSessionStatusMessage:
    action: send
    title: Session Information
    summary: Send Session Information for the opened connection to the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/sessionStatusMessage'
  receiveRequestSMSCodeMessage:
    action: receive
    title: Receive request SMS Code
    summary: Receive request SMS Code for the opened connection from the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/requestSMSCodeMessage'
  sendRequestSMSCodeResponseMessage:
    action: send
    title: Send request SMS Code Response
    summary: Send request SMS Code Response for the opened connection to the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/requestSMSCodeResponseMessage'
  receiveConfirmSMSCodeMessage:
    action: receive
    title: Receive confirm SMS Code
    summary: Receive confirm SMS Code for the opened connection from the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/confirmSMSCodeMessage'
  sendConfirmSMSCodeResponseMessage:
    action: send
    title: Send confirm SMS Code Response
    summary: Send confirm SMS Code Response for the opened connection to the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/confirmSMSCodeResponseMessage'
  sendICCSNReassignmentMessage:
    action: send
    title: Send ICCSN Reassignment
    summary: Send ICCSN Reassignment for the opened connection to the client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/ICCSNReassignmentMessage'
  receiveRegisterEgkMessage:
    action: receive
    title: Receive eGK message
    summary: Receive eGK message from client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/registerEgkMessage'
  sendRegisterEgkFinishMessage:
    action: send
    title: Send eGK finished message
    summary: Send eGK finished message to client (app)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/registerEgkFinishMessage'
  sendSendApduMessage:
    action: send
    title: Send APDU message
    summary: Send APDU to app (INTERNAL AUTHENTICATE)
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/sendApduMessage'
  receiveSendApduResponseMessage:
    action: receive
    title: Receive APDU response from app
    summary: INTERNAL AUTHENTICATE response
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/sendApduResponseMessage'
  sendTasklistErrorMessage:
    action: send
    title: Error message to app
    summary: Error in the course of card plugging or ReadVSD
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/tasklistErrorMessage'
  sendReadyMessage:
    action: send
    title: Ready notification
    summary: >-
      Notification indicating to app that session is ready and eGK data can be
      sent
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/readyMessage'
  sendInvalidPayloadErrorMessage:
    action: send
    title: Invalid Payload
    summary: Provided payload did not pass validation
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/invalidPayloadErrorMessage'
  sendGenericErrorMessage:
    action: send
    title: Generic Error
    summary: eH-CL encountered an error
    channel:
      $ref: '#/channels/cardExchange'
    messages:
      - $ref: '#/channels/cardExchange/messages/genericErrorMessage'

components:
  messages:
    sessionStatusMessage:
      name: sessionStatusMessage
      title: Session Status Message
      summary: Status about the (re-)established session
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/sessionStatus'
      examples:
        - name: sessionStatus
          summary: sessionStatus message
          payload:
            messageId: 44a4e8f5-6aeb-4380-9a8d-b355b7f62b52
            type: sessionStatus
            webSocketId: 3509584a-04e7-4756-bab0-0da4a84d0c12
            phoneRegistered: false

    requestSMSCodeMessage:
      name: requestSMSCodeMessage
      title: Request SMS Code Message
      summary: Request SMS code validation for a given phone number
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/requestSMSCode'
      examples:
        - name: requestSMSCode
          summary: requestSMSCode message
          payload:
            type: requestSMSCode
            phoneNumber: +49 (175) 142 126 92
    requestSMSCodeResponseMessage:
      name: requestSMSCodeResponseMessage
      title: Request SMS Code Response Message
      summary: Response for requesting an SMS code validation for a given phone number
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/correlationIdTrait'
          - $ref: '#/components/schemas/requestSMSCodeResponse'
      examples:
        - name: requestSMSCodeResponse success
          summary: requestSMSCodeResponse message
          payload:
            type: requestSMSCodeResponse
            resultCode: SUCCESS
        - name: requestSMSCodeResponse error
          summary: requestSMSCodeResponse message
          payload:
            type: requestSMSCodeResponse
            resultCode: NUMBER_FROM_WRONG_COUNTRY
            errorMessage: The provided number is not from Germany

    confirmSMSCodeMessage:
      name: confirmSMSCodeMessage
      title: Confirm SMS Code Message
      summary: Confirm SMS code validation for a given phone number
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/confirmSMSCode'
      examples:
        - name: confirmSMSCode
          summary: confirmSMSCode message
          payload:
            type: confirmSMSCode
            smsCode: 123456
    confirmSMSCodeResponseMessage:
      name: confirmSMSCodeResponseMessage
      title: Confirm SMS Code Response Message
      summary: Response for confirming an SMS code for a given phone number
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/correlationIdTrait'
          - $ref: '#/components/schemas/confirmSMSCodeResponse'
      examples:
        - name: confirmSMSCodeResponse success
          summary: confirmSMSCodeResponse message
          payload:
            type: confirmSMSCodeResponse
            resultCode: SUCCESS
        - name: confirmSMSCodeResponse error
          summary: confirmSMSCodeResponse message
          payload:
            type: confirmSMSCodeResponse
            resultCode: TAN_RETRY_LIMIT_EXCEEDED
            errorMessage: The SMS code has been entered wrong too many times

    ICCSNReassignmentMessage:
      name: ICCSNReassignmentMessage
      title: Notify user af reassigned ICCSN
      summary: >
        Notification for the user that the previously paired Phone Number is used with a new eGK.
        This message is correlated to the registerEgk message.
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/correlationIdTrait'
          - $ref: '#/components/schemas/ICCSNReassignment'
      examples:
        - name: ICCSNReassignment
          summary: ICCSNReassignment message
          payload:
            messageId: 559ebb3e-f215-4836-8a65-6f83e531d568
            correlationId: f1f7bdb6-7562-4152-b636-9f75ca5fb7b1
            type: ICCSNReassignment

    registerEgkMessage:
      name: send
      title: send
      summary: Card data
      contentType: application/json
      payload:
        type: array
        items:
          oneOf:
            - $ref: '#/components/schemas/registerEgkEnvelope'
            - $ref: '#/components/schemas/cardSessionId'
            - $ref: '#/components/schemas/correlationId'
        minItems: 2
        maxItems: 3
      examples:
        - name: registerEGK
          summary: registerEGK message
          payload:
            - type: registerEGK
              payload: >-
                eyJjYXJkU2Vzc2lvbklkIjoiMzUwOTU4NGEtMDRlNy00NzU2LWJhYjAtMGRhNGE4NGQwYzEyIiwiZ2RvIjoiV2dxQUoyaUJHWm1abG9OcCIsImF0ciI6IjRCRUNBZ2dKQWdNQWdBSUNBZ2dKQWdJSUNWOVNESUJtQlVSRlJ5dEVjNVloNE5BREJBUUIwaEJFUlVsR1dEVXlSalJIUkVwTkFRQUEweEJFUlVjclJGTXpOMDlUUjBzeUFRQUExQkJFUlVjclJGTXpOMGRMVmpBekFRQUExUU1FQkFIV0VFUkZSeXRFUTBJeVExUkhNREVCQUFEWEVFUkZSeXRFVUVSUVUxOWZYMThCQmdBPSIsImNhcmRWZXJzaW9uIjoiN3l2QUF3SUFBTUVEQkFVQndoQkVSVWNyUkZNek4wZExWakF6QVFBQXhBTUJBQURGQXdJQUFNY0RBUUFBIiwieDUwOUF1dGhSU0EiOiJNSUlFOHpDQ0E5dWdBd0lCQWdJRExKeFwvTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdzTVFzd0NRWURWUVFHRXdKRVJURXpNREVHQTFVRUNnd3FRWFJ2Y3lCSmJtWnZjbTFoZEdsdmJpQlVaV05vYm05c2IyZDVJRWR0WWtnZ1RrOVVMVlpCVEVsRU1VVXdRd1lEVlFRTEREeEZiR1ZyZEhKdmJtbHpZMmhsSUVkbGMzVnVaR2hsYVhSemEyRnlkR1V0UTBFZ1pHVnlJRlJsYkdWdFlYUnBhMmx1Wm5KaGMzUnlkV3QwZFhJeElUQWZCZ05WQkFNTUdFRlVUMU11UlVkTExVTkJNakEySUZSRlUxUXRUMDVNV1RBZUZ3MHlNekEwTWpBeE1UTTNOREJhRncweU9EQTBNakF4TVRNM05EQmFNSUdSTVFzd0NRWURWUVFHRXdKRVJURWZNQjBHQTFVRUNnd1dRVTlMSUVKaFpHVnVMVmZEdkhKMGRHVnRZbVZ5WnpFU01CQUdBMVVFQ3d3Sk1UQTRNREU0TURBM01STXdFUVlEVlFRTERBcFVNRFE1T1RBME56STNNUTh3RFFZRFZRUUVEQVpFWlhCcWNHa3hEekFOQmdOVkJDb01Ca3RoWjNWNGFURVdNQlFHQTFVRUF3d05SR1Z3YW5CcElFdGhaM1Y0YVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSlcyc1VvSEh2QkF3a0luRE91VlRWeWQ4TERDR0FOc09EZmdXK2s5Wm9nblhaYnp6WWxZT3hCcDJcL01Bd0NGdkwwODRKMklTZFJvM2FBRE1zc0tlXC9uaEdqMTZlKzg2UE5OTklIZ3lEKzdNQzEzQlNDYzlCYXZjZTZSTnkzcFR3dGt6OU1NdjAxTTY1Z3NoSHd3N1A1YmZySGdBNzVCNG1RUTlhalhVQWxCb01CanU2YU5BZVJjZnJyaVhKTXhaVmJ1TGFBYXlWWVhJdWdSY1AzRTVpSVBYTkZoNTczTGVZRmZCMVpFTmtUXC9oUEh0KzE2aEdyUXl1M3pDOEtkN2pFYmlKUFwveE8yclVXbXQ3N3VHTU1zMnJiRmZoQUhtVlwvaERPTTRnQ0JQWDlBQVBObUlBMlRETTJKVzRXVU5kQSt4Rllscm1ZbEU0YWswWFQyc1g5WURZQnNDQXdFQUFhT0NBVFV3Z2dFeE1CMEdBMVVkRGdRV0JCU2RLTVRGb0NPRVwvUmw2S3VEc3M2VGF0eU00d0RBT0JnTlZIUThCQWY4RUJBTUNCNEF3REFZRFZSMFRBUUhcL0JBSXdBREJSQmdOVkhTQUVTakJJTUFrR0J5cUNGQUJNQkVZd093WUlLb0lVQUV3RWdTTXdMekF0QmdnckJnRUZCUWNDQVJZaGFIUjBjRG92TDNkM2R5NW5aVzFoZEdsckxtUmxMMmR2TDNCdmJHbGphV1Z6TURjR0NDc0dBUVVGQndFQkJDc3dLVEFuQmdnckJnRUZCUWN3QVlZYmFIUjBjRG92TDI5amMzQXVaV2RyTFhSbGMzUXRkSE53TG1SbE1COEdBMVVkSXdRWU1CYUFGTEFreWRhWnhKQTJMalFWMWR6S1BNN3hhdVBcL01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNREFHQlNza0NBTURCQ2N3SlRBak1DRXdIekFkTUJBTURsWmxjbk5wWTJobGNuUmxMeTF5TUFrR0J5cUNGQUJNQkRFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDNWxzbSs4bEdnOGw3ZmYwcEhObUZpVWppb2lwWUhxTDFYSXhyaWM4WVlKVjlBT0lqTG8rUVNzR0JLbm9YTTFPQ1FCWjJTc1pESHExMHczZGpUdm9DK0hHeWJxR0V1VnBJbWVRRWZwRzJaTmZMZUhnaXB4YzY3ZjF6cjFENGdzaGNKRW1iM0hiTCthM0lRV1lXNWNUdXZsbGMxQ09TOVwvRGd4R3FyOHh0S0k2K1phMWs5ZnZLblNKZVFxeDBNdnZQbitmNHBleWV6V2dCYVlwYWt3c2loZjhxZGNRdEJkdlwvSTNjSmNZekF3aTNBNE54bVptTktlMmlOVkF3Smh4ZjRNQVJzQVlVZ3M0YnQ0VzNHaFhHeXZwdUVRb0tJSm9zKzZsZEtVb2Z1cXBjRFwvOTRsVlRESCszZnl5azFnU3Z2eHdXYWwyWEZXYVRiSXkwTnJCN05jSzA9IiwieDUwOUF1dGhFQ0MiOiJNSUlEYURDQ0F3NmdBd0lCQWdJREw5QUhNQW9HQ0NxR1NNNDlCQU1DTUlHc01Rc3dDUVlEVlFRR0V3SkVSVEV6TURFR0ExVUVDZ3dxUVhSdmN5QkpibVp2Y20xaGRHbHZiaUJVWldOb2JtOXNiMmQ1SUVkdFlrZ2dUazlVTFZaQlRFbEVNVVV3UXdZRFZRUUxERHhGYkdWcmRISnZibWx6WTJobElFZGxjM1Z1WkdobGFYUnphMkZ5ZEdVdFEwRWdaR1Z5SUZSbGJHVnRZWFJwYTJsdVpuSmhjM1J5ZFd0MGRYSXhJVEFmQmdOVkJBTU1HRUZVVDFNdVJVZExMVU5CTWpBMUlGUkZVMVF0VDA1TVdUQWVGdzB5TXpBME1qQXhNVE00TUROYUZ3MHlPREEwTWpBeE1UTTRNRE5hTUlHUk1Rc3dDUVlEVlFRR0V3SkVSVEVmTUIwR0ExVUVDZ3dXUVU5TElFSmhaR1Z1TFZmRHZISjBkR1Z0WW1WeVp6RVNNQkFHQTFVRUN3d0pNVEE0TURFNE1EQTNNUk13RVFZRFZRUUxEQXBVTURRNU9UQTBOekkzTVE4d0RRWURWUVFFREFaRVpYQnFjR2t4RHpBTkJnTlZCQ29NQmt0aFozVjRhVEVXTUJRR0ExVUVBd3dOUkdWd2FuQnBJRXRoWjNWNGFUQmFNQlFHQnlxR1NNNDlBZ0VHQ1Nza0F3TUNDQUVCQndOQ0FBUkdcL3pIamVyMkpWcE5pOGZHTHcxVFk4VVYwakM1T0l5M0ViUFNLWXpFWTR3ajF3dTFVeG16MHFoQXZ1Q1RUbTlkSE9ha0w1MlB0d2lWNFwvRkIwXC9UdU9vNElCTlRDQ0FURXdIUVlEVlIwT0JCWUVGSlNrYys3TkF2aEczcjMrbnlHZmQ3RzRNZkRlTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNRkVHQTFVZElBUktNRWd3Q1FZSEtvSVVBRXdFUmpBN0JnZ3FnaFFBVEFTQkl6QXZNQzBHQ0NzR0FRVUZCd0lCRmlGb2RIUndPaTh2ZDNkM0xtZGxiV0YwYVdzdVpHVXZaMjh2Y0c5c2FXTnBaWE13TndZSUt3WUJCUVVIQVFFRUt6QXBNQ2NHQ0NzR0FRVUZCekFCaGh0b2RIUndPaTh2YjJOemNDNWxaMnN0ZEdWemRDMTBjM0F1WkdVd0h3WURWUjBqQkJnd0ZvQVVScVA1WGlkb3dZXC9uWjB4UWFpUWZHMjF0OWx3d0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3SXdNQVlGS3lRSUF3TUVKekFsTUNNd0lUQWZNQjB3RUF3T1ZtVnljMmxqYUdWeWRHVXZMWEl3Q1FZSEtvSVVBRXdFTVRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQWhZVEtEd0xva29JbGJLUXk5dGhVSUR2XC9Dclk1aURISVNlVHk4c0E1Rll3Q0lEeHBiZ2dHM3dPN3dZXC9FMlwvWlA5YWYzalAyWXJvQ0JxUVVBVHFzbmFGZWYiLCJjdmNBdXRoIjoiZnlHQjJuOU9nWk5mS1FGd1FnaEVSVUZVV0JZQ0lYOUpTd1lHS3lRREJRTUJoa0VFSVg0a0p4Rk0zbmNHemJCVitUWmZkelVIbFNcL1wvT0FZbnJMTE50SGdHS280U2JvaFFJdWIwZUo2NDg0QmhrVDBha3A2OCszODhWWDk3bjAxR3F1KzdTbDhnREFBSmdDZG9nUm1abVphRGFYOU1Fd1lJS29JVUFFd0VnUmhUQndBQUFBQUFBQUJmSlFZQ0F3QUVBZ0JmSkFZQ0NBQUVBZ0JmTjBDSzdJZm05OTh3VmR1cXZCbTAzcWdrZG9yTVJ0a3hTXC9FOTFRZzVhNlh5XC9JY2NPRTVFcjEyQzRGTFM4QkYrN2NwajJhVjVQekptMUIwdVc3WFJLXC9YaiIsImN2Y0NBIjoiZnlHQjJIOU9nWkZmS1FGd1FnaEVSVWRZV0lZQ0lIOUpUUVlJS29aSXpqMEVBd0tHUVFSajN0TmRpXC9KMFpzeGgrU2tHUzVEdWFiXC9tRm56Y0p1WFdvQ1Y3YlhPOE42a3g1aXExWHhIbnZTcDdoSXppMEVvOTdqcEZwQmtsOGRWblVSdUFmRUszWHlBSVJFVkJWRmdXQWlGXC9UQk1HQ0NxQ0ZBQk1CSUVZVXdlQUFBQUFBQUFBWHlVR0FnRUFBZ0VIWHlRR0Fna0FBZ0VHWHpkQWU0XC9nRndUeHFnOEk5VzRxZ2pWcFwvOThiRjJEam80WlwvXC93ZGFSeDE0bFlodTJZRmRsSCtwWnBicnBoS2VSRUxVQmZqdElkRTUzWjJ3MWRJUDJHNktVdz09IiwiY2xpZW50IjoiQ09NIn0=
            - 3509584a-04e7-4756-bab0-0da4a84d0c12
    registerEgkFinishMessage:
      name: registerEgkFinishMessage
      title: Register eGK Finish Message
      summary: Finish message for eGK registration
      contentType: application/json
      payload:
        type: array
        items:
          oneOf:
            - $ref: '#/components/schemas/registerEgkFinishEnvelope'
            - $ref: '#/components/schemas/cardSessionId'
            - $ref: '#/components/schemas/correlationId'
        minItems: 3
        maxItems: 3

    sendApduMessage:
      name: receive
      title: receive
      summary: Token to be signed
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/cardSessionTrait'
          - $ref: '#/components/schemas/sendApdu'
      examples:
        - name: sendAPDU
          summary: sendAPDU message
          payload:
            messageId: 3509584a-04e7-4756-bab0-0da4a84d0c12
            cardSessionId: 38a5fb1b-f8e4-4132-8ec6-00fcd07bc5cc
            type: sendAPDU
            apdu: AIgAABiAJ2iBGZmZloNpD7bD27Eh0y1kmUtD3tkA

    sendApduResponseMessage:
      name: send
      title: send
      summary: APDU from card to processing component
      contentType: application/json
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/messageIdTrait'
          - $ref: '#/components/schemas/correlationIdTrait'
          - $ref: '#/components/schemas/cardSessionTrait'
          - $ref: '#/components/schemas/sendApduResponse'
      examples:
        - name: sendAPDUResponse
          summary: sendAPDUResponse message
          payload:
            messageId: 02774740-35dc-460a-b7dc-b5d076b382c3
            correlationId: 3509584a-04e7-4756-bab0-0da4a84d0c12
            cardSessionId: 38a5fb1b-f8e4-4132-8ec6-00fcd07bc5cc
            type: sendAPDUResponse
            responseApdu: kbNAK4xv4nyvwEO4fwgmZmnFnwGSb2+WDftJq2Sus0lwx5rQUQ9tq0Q1qKwlyjxpaAL0CSJ1gWRVQkfVzoYxxZAA

    tasklistErrorMessage:
      name: receive
      title: receive
      summary: Error retrieving PN
      contentType: application/json
      payload:
        $ref: '#/components/schemas/tasklistErrorEnvelope'
      examples:
        - name: tasklistErrorMessage
          summary: tasklistErrormessage example
          payload:
            type: receiveTasklistError
            payload: >-
              eyJjYXJkU2Vzc2lvbklkIjoiNTJiY2RiYzItMjU1Mi00YzVlLWE4ODQtZWMwM2YxYWUxZjIxIiwic3RhdHVzIjo1MDAsInRpc3RhdHVzIjoiNTAwIiwiZXJyb3JtZXNzYWdlIjoiUmVhZFZTRCBFcnJvciJ9
    readyMessage:
      name: ready
      title: ready
    invalidPayloadErrorMessage:
      name: error
      title: error
      contentType: text/plain
      payload:
        type: string
        description: Validation result
    genericErrorMessage:
      name: error
      title: error
      contentType: application/json
      payload:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/genericErrorPayload'
            - $ref: '#/components/schemas/cardSessionId'
            - $ref: '#/components/schemas/correlationId'
        maxItems: 3

  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          replyTo:
            type: string
  correlationIds:
    default:
      description: Default Correlation ID
      location: $message.payload#/correlationId

  schemas:
    webSocketId:
      type: string
      description: Identifier for the established web socket connection

    cardSessionId:
      type: string
      description: Card session identifier
    cardSessionTrait:
      type: object
      required:
        - cardSessionId
      properties:
        cardSessionId:
          $ref: '#/components/schemas/cardSessionId'

    messageId:
      type: string
      description: Message identifier
    messageIdTrait:
      type: object
      required:
        - messageId
      properties:
        messageId:
          $ref: '#/components/schemas/messageId'
    correlationId:
      description: CorrelationId
      $ref: '#/components/schemas/messageId'
    correlationIdTrait:
      type: object
      required:
        - correlationId
      properties:
        correlationId:
          $ref: '#/components/schemas/correlationId'

    genericErrorPayload:
      type: object
      description: Base64 encoded json payload of the error

    sessionStatus:
      type: object
      description: Session Information object
      required:
        - type
        - webSocketId
      properties:
        type:
          type: string
          const: sessionStatus
        webSocketId:
          $ref: '#/components/schemas/webSocketId'
          description: The session ID chosen by the server for this WS channel
        phoneRegistered:
          type: boolean
          default: false
          description: Indicator whether the phone number of the user has been registered already in this session

    requestSMSCode:
      type: object
      description: Request SMS Code Payload object
      required:
        - type
        - phoneNumber
      properties:
        type:
          type: string
          const: requestSMSCode
        phoneNumber:
          type: string
          description: The phone number where the SMS code should be sent to
    requestSMSCodeResponse:
      type: object
      description: Request SMS Code Payload Response object
      required:
        - type
        - resultCode
      properties:
        type:
          type: string
          const: requestSMSCodeResponse
        resultCode:
          $ref: '#/components/schemas/smsCodeResultType'
          description: Result code for SMS Code responses
        errorMessage:
          type: string
          description: Error message in case of an error
    confirmSMSCode:
      type: object
      description: Confirm SMS Code Payload object
      required:
        - type
        - smsCode
      properties:
        type:
          type: string
          const: confirmSMSCode
        smsCode:
          type: string
          description: The SMS code to validate against the sent value
    confirmSMSCodeResponse:
      type: object
      description: Confirm SMS Code Payload Response object
      required:
        - type
        - resultCode
      properties:
        type:
          type: string
          const: confirmSMSCodeResponse
        resultCode:
          $ref: '#/components/schemas/smsCodeResultType'
          description: Result code for SMS Code responses
        errorMessage:
          type: string
          description: Error message in case of an error
    smsCodeResultType:
      type: string
      enum:
        - SUCCESS
        - NUMBER_FROM_WRONG_COUNTRY
        - TAN_EXPIRED
        - TAN_INCORRECT
        - TAN_RETRY_LIMIT_EXCEEDED
        - UNKNOWN_ERROR

    ICCSNReassignment:
      type: object
      description: ICCSN Reassignment object, indicating to the user, that the ICCSN-Phone association has changed.
      required:
        - type
      properties:
        type:
          type: string
          const: ICCSNReassignment
    registerEgkEnvelope:
      type: object
      properties:
        type:
          type: string
          const: registerEGK
        payload:
          $ref: '#/components/schemas/registerEgkPayload'
    registerEgkFinishEnvelope:
      type: object
      properties:
        type:
          type: string
          const: registerEGKFinish
        payload:
          $ref: '#/components/schemas/registerEgkFinishPayload'

    tasklistErrorEnvelope:
      type: object
      properties:
        type:
          type: string
          const: receiveTasklistError
        payload:
          $ref: '#/components/schemas/tasklistErrorPayload'
    registerEgkPayload:
      type: object
      required:
        - cardSessionId
        - gdo
        - cardVersion
        - x509AuthECC
        - cvcAuth
        - cvcCA
        - atr
      description: Base64 encoded json payload
      properties:
        cardSessionId:
          $ref: '#/components/schemas/cardSessionId'
        gdo:
          type: string
          format: byte
          description: Data from EF.GDO
        cardVersion:
          type: string
          format: byte
          description: Data from EF.Version2
        x509AuthRSA:
          type: string
          format: byte
          description: Data from EF.C.CH.AUT.R2048 - optional
        x509AuthECC:
          type: string
          format: byte
          description: Data from EF.C.CH.AUT.E256
        cvcAuth:
          type: string
          format: byte
          description: Data from EF.C.eGK.AUT_CVC.E256
        cvcCA:
          type: string
          format: byte
          description: Data from EF.C.CA_eGK.CS.E256
        atr:
          type: string
          format: byte
          description: Data from EF.ATR
      contentType: application/json
    registerEgkFinishPayload:
      type: object
      description: Base64 encoded json payload
      properties:
        removeCard:
          type: boolean
          default: true
          description: Indicator whether the card should be removed from the card reader
      contentType: application/json

    sendApdu:
      type: object
      required:
        - type
        - apdu
      description: Type for sending an APDU to the card
      properties:
        type:
          type: string
          const: sendAPDU
        apdu:
          type: string
          format: byte
          description: APDU to be forwarded to the card

    sendApduResponse:
      type: object
      required:
        - type
        - responseApdu
      description: Type for receiving a Response APDU from the card
      properties:
        type:
          type: string
          const: sendAPDUResponse
        responseApdu:
          type: string
          format: byte
          description: Response APDU from card/app to bridge

    tasklistErrorPayload:
      type: object
      required:
        - cardSessionId
        - status
      description: Base64 encoded json payload
      properties:
        cardSessionId:
          $ref: '#/components/schemas/cardSessionId'
        status:
          type: integer
          description: Error Code
        tistatus:
          type: string
          description: Responsecode from a TI service or connector
        rootcause:
          type: string
          description: RootCause of the error
        errormessage:
          type: string
          description: Error message
      contentType: application/json
